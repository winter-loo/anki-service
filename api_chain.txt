1689206868.550766 DecksService.add_deck(name: "test2"
common {
  study_collapsed: true
  browser_collapsed: true
}
normal {
  config_id: 1
}
) = id: 1689206868548
changes {
  deck: true
  mtime: true
  browser_table: true
  browser_sidebar: true
  study_queues: true
}

1689205936.041420 DecksService.get_deck_names(skip_empty_default: true
) = entries {
  id: 1677685990341
  name: "4000 Essential English Words"
}
entries {
  id: 1689184291450
  name: "test"
}
entries {
  id: 1
  name: "系统默认"
}
entries {
  id: 1677686210977
  name: "网络"
}

1689205939.160551 DecksService.get_deck_id_by_name(val: "test"
) = did: 1689184291450

1689207099.665562 NotesService.add_note(note {
  guid: "sAROkG(*z*"
  notetype_id: 1674847789452
  fields: "test2_front1"
  fields: "test2_back1"
  fields: "ldd"
}
deck_id: 1689206868548
) = note_id: 1689207099659
changes {
  card: true
  note: true
  config: true
  mtime: true
  browser_table: true
  browser_sidebar: true
  note_text: true
  study_queues: true
}

1689207099.689171 NotesService.new_note(ntid: 1674847789452
) = guid: "P[~pc^`;b_"
notetype_id: 1674847789452
fields: ""
fields: ""
fields: ""


1689207106.281311 DecksService.deck_tree(now: 1689207106
) = review_count: 24
new_count: 24
total_including_children: 3886
children {
  deck_id: 1689206868548
  name: "test2"
  level: 1
  collapsed: true
  new_count: 1
  new_uncapped: 1
  total_in_deck: 1
  total_including_children: 1
}

1689207109.156378 DecksService.set_current_deck(did: 1689206868548
) = config: true
mtime: true
browser_table: true
browser_sidebar: true
study_queues: true

1689207109.158781 DecksService.get_current_deck() = id: 1689206868548
name: "test2"
mtime_secs: 1689206868
usn: -1
common {
  study_collapsed: true
  browser_collapsed: true
}
normal {
  config_id: 1
}

1689207109.191984 SchedulerService.get_queued_cards(fetch_limit: 1
) = cards {
  card {
    id: 1689207099662
    note_id: 1689207099659
    deck_id: 1689206868548
    mtime_secs: 1689207099
    usn: -1
    due: 9
  }
  states {
    current {
      normal {
        new {
          position: 9
        }
      }
    }
    again {
      normal {
        learning {
          remaining_steps: 2
          scheduled_secs: 60
        }
      }
    }
    hard {
      normal {
        learning {
          remaining_steps: 2
          scheduled_secs: 180
        }
      }
    }
    good {
      normal {
        learning {
          remaining_steps: 1
          scheduled_secs: 300
        }
      }
    }
    easy {
      normal {
        review {
          scheduled_days: 5
          ease_factor: 2.5
        }
      }
    }
  }
}
new_count: 1

1689207119.096493 NotesService.get_note(nid: 1689207099659
) = id: 1689207099659
guid: "sAROkG(*z*"
notetype_id: 1674847789452
mtime_secs: 1689207099
usn: -1
fields: "test2_front1"
fields: "test2_back1"
fields: "ldd

1689207119.100911 CardRenderingService.render_existing_card(card_id: 1689207099662
) = question_nodes {
  text: "test2_front1"
}
answer_nodes {
  replacement {
    field_name: "FrontSide"
  }
}
answer_nodes {
  text: "\n\n<hr id=answer>\n\ntest2_back1"
}
css: ".card {\n    font-family: arial;\n    font-size: 20px;\n    text-align: center;\n    color: black;\n    backgro
und-color: white;\n}\n"

1689207119.102329 CardRenderingService.extract_av_tags(text: "test2_front1"
question_side: true
) = text: "test2_front1"

1689207119.102664 CardRenderingService.extract_av_tags(text: "test2_front1\n\n<hr id=answer>\n\ntest2_back1"
) = text: "test2_front1\n\n<hr id=answer>\n\ntest2_back1"
